DONE Strip all logic out of player object so that 2 could exist
DONE Bullets
DONE Give objects unique IDs
DONE 2 player test
DONE Hold correct player ID on client end
DONE full report of gamestate on conenct for client
DONE bug: Firing a bullet makes all players move faster.
DONE refactor event creation - make renderable know how to build its own event
DONE Refactor how player move requests are handled
DONE events know how to action themselves
DONE bullet collision
DONE player acceleration, velocity etc - asteroids type controls
DONE Angle of velocity is stored, player moves along that angle
DONE Velocity in another direction moves the angle of velocity
DONE OSX Packaging/distribution
DONE stars in background
DONE Larger space, camera follows player
DONE Barriers
DONE Bug: Velocity takes a long time to change direction even when stopped
DONE Scores, kills, deaths - but not displayed anywhere!
DONE Picking up stuff, inventory
DONE Display inventory somehow
DONE Refactor: Separate scene controllers for server and client
DONE Populate space somehow, with asteroids, space junk etc
DONE Bug: Velocity doesn't change direction properly
DONE Enemies
DONE Refactor: Server app runs server state instead of Server
DONE Refactor: Client runs local server as sub-state rather than controller - this way the server is always run as a state
DONE Players respawn when they die
Bug: Server crashes when a player leaves.
Mapping data format? Map storage system? save games? Persistent world?
A better, predictable star-field.
Display scores somewhere
Move world generation stuff into a module
Dropping stuff
Crafting
Bug: Player can spawn on top of things


Refactor: CreateObject#process contains client and server code
Refactor: Player movement
Refactor: Star field movement code
Refactor: Messages are sent from client, server, keyboard_controller and player - move to one place?
